AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Tappy Backend (Orders & Payments + API)
Globals:
  Function:
    Runtime: nodejs18.x
    Timeout: 15
    MemorySize: 512
    Environment:
      Variables:
        AWS_NODEJS_CONNECTION_REUSE_ENABLED: '1'
        APP_BASE_URL: https://tappy.cl
        API_BASE_URL: https://u1yadifvmj.execute-api.us-east-1.amazonaws.com/Prod
        TBK_USE_INTEGRATION: '1'
Resources:
  TappyOrdersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Tappy_Orders
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
      - AttributeName: id
        AttributeType: S
      - AttributeName: userId
        AttributeType: S
      - AttributeName: createdAt
        AttributeType: S
      KeySchema:
      - AttributeName: id
        KeyType: HASH
      GlobalSecondaryIndexes:
      - IndexName: UserIndex
        KeySchema:
        - AttributeName: userId
          KeyType: HASH
        - AttributeName: createdAt
          KeyType: RANGE
        Projection:
          ProjectionType: ALL
  TappyPaymentsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Tappy_Payments
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
      - AttributeName: id
        AttributeType: S
      - AttributeName: orderId
        AttributeType: S
      KeySchema:
      - AttributeName: id
        KeyType: HASH
      GlobalSecondaryIndexes:
      - IndexName: OrderIndex
        KeySchema:
        - AttributeName: orderId
          KeyType: HASH
        Projection:
          ProjectionType: ALL
  TappyApiFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: tappy-api
      CodeUri: TappyApiFunction
      Handler: lambda.handler
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: TappyOrdersTable
      - DynamoDBCrudPolicy:
          TableName:
            Ref: TappyPaymentsTable
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Events:
        ApiProxy:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: ANY
    Metadata:
      SamResourceId: TappyApiFunction
Outputs:
  ApiUrl:
    Description: Invoke URL for Prod stage
    Value:
      Fn::Sub: https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod
  OrdersTableName:
    Value:
      Ref: TappyOrdersTable
  PaymentsTableName:
    Value:
      Ref: TappyPaymentsTable
